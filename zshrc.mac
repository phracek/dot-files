set +x
# User specific aliases and functions


gfm() {
  local tmp_opt=""
  [ -n "$2" ] && tmp_opt="--start-number $2"
  git format-patch $tmp_opt "$1"^.."$1"
  return $?
}

glfm() {
  local nn=1
  while [[ "$1" != "" ]]; do
    gfm "$1" $nn || echo "shit $1" 
    nn=$(( nn +1 ))
    shift
  done
}

function gru() {
    BRANCH=$1
    if [[ -z "$BRANCH" ]]; then
        echo "specify branch"
        exit 0
    fi
    git rebase upstream/$BRANCH
}

function grh() {
    NUMBER=$1
    if [[ -z "$NUMBER" ]]; then
        echo "specify HEAD number"
        return 1
    fi
    git rebase -i HEAD~$NUMBER
}

git_changelog() {
    SOURCE=$1
    git log $SOURCE...HEAD --pretty=format:'- %s (%ae)' | grep -v Merge
}

check_pre_commit() {
  PWD=`pwd`
  if [[ -f "${PWD}/.pre-commit-config.yaml" ]]; then
      echo "Pre-commit exists"
      pre-commit run --all
  fi
}

export PYTHONDONTWRITEBYTECODE="fuck-yes"
export LDFLAGS="-L/usr/local/opt/zlib/lib"
export CPPFLAGS="-I/usr/local/opt/zlib/include"

export FEDORA_IP_STACK=10.0.104.79
export RHEL8_IP_STACK=10.0.107.154
export FEDORA_NIGHTLY=10.0.98.35
export PKG_CONFIG_PATH="/usr/local/opt/zlib/lib/pkgconfig"

GIT_PROMPT_ONLY_IN_REPO=1
if [ -f "$(brew --prefix)/opt/bash-git-prompt/share/gitprompt.sh" ]; then
  __GIT_PROMPT_DIR=$(brew --prefix)/opt/bash-git-prompt/share
  source "$(brew --prefix)/opt/bash-git-prompt/share/gitprompt.sh"
fi

di_run_delete() {
	docker rm -f $(docker ps -aq)
}

di_delete() {
	docker rmi -f $(docker images -q)
}

gfu() {
	branch=$1
	if [[ x"${branch}" == "x" ]]; then
		branch=master
    fi
	git fetch upstream
	git rebase upstream/${branch}
}


rsync_tmt() {
    if [[ -z $IP_STACK ]]; then
        echo "Define correct IP_STACK value."
        return 1
    fi
	set -x
	CONTAINER="$1"; shift
	cd $HOME/work/scl-containers
	rsync -avzh --delete -e "ssh -i $HOME/.ssh/1minutetip.edcsa" "$CONTAINER" root@$IP_STACK:/root/
	cd -
	set +x
}

rsync_to_openstack_dir_rhel8() {
	DIR="$1"
	rsync -avzh --delete "$DIR" root@${RHEL8_IP_STACK}:/root/
}
rsync_to_openstack_dir() {
	set -x
	DIR="$1"
	cd ../
	rsync -avzh --delete -e "ssh -i ~/.ssh/openstack" "$DIR" phracek@${FEDORA_IP_STACK}:/home/phracek/work
	cd $DIR
	set +x
}
rsync_to_openstack_dir_nightly() {
	DIR="$1"
	cd ../
	rsync -avzh --delete -e "ssh -i ~/.ssh/openstack" "$DIR" fedora@${FEDORA_NIGHTLY}:/home/fedora/work/
	cd $DIR
}
rsync_to_openstack() {
	DIR="$1"
	cd $HOME/work/scl-containers
	echo "${FEDORA_IP_STACK}"
	rsync -avzh --delete -e "ssh -i ~/.ssh/openstack" "$DIR" phracek@${FEDORA_IP_STACK}:/home/phracek/
}
rsync_to_openstack_rhel8() {
	DIR="$1"
	cd $HOME/work/scl-containers
	rsync -avzh --delete "$DIR" root@${RHEL8_IP_STACK}:/root/
}
rsync_from_openstack() {
set -x
	DIR="$1"
	cd $HOME/work/scl-containers/$DIR
	rsync -avzh --delete -e "ssh -i ~/.ssh/openstack" phracek@${FEDORA_IP_STACK}:/home/phracek/$DIR/ .
set +x
}

tmt_machine() {
	OS="$1"
	cd $HOME/work/GitLab/core-services-dockerfiles
	podman machine start
	make tmt-build
	make tmt-run OS="$OS"
	cd -
}

rename_dirs() {
	old_name=$1
	new_name=$2
	find . -type d -print0 | xargs -0 rename s/\$old_name/\$new_name/g
}

clone_gitlab_repos() {
	branch=$1
	mkdir -p "${HOME}/work/gitlab.redhat.com/${branch}"
	cd "${HOME}/work/gitlab.redhat.com/${branch}"
	while read -r repo; do
		echo "Clonning repo $repo"
		git clone "git@gitlab.com:phracek/$repo.git"
		cd "$repo"
		git remote add upstream "git@gitlab.com:redhat/rhel/containers/$repo.git"
		gf --all
		gr -v
		gco "$branch"
		if [ $? -ne 0 ]; then
			gco --track origin/$branch
			gco "$branch"
		fi
		cd -
	done < "$HOME/work/gitlab.redhat.com/repos_rhel9"
}

check_gitlab_file() {
	branch="$1"
	file_to_check="$2"
	cd "${HOME}/work/gitlab.redhat.com/${branch}"
	while read -r repo; do
		cd $repo
		if [[ ! -f "$file_to_check" ]]; then
			echo "File $file_to_check is missing in $repo"
		fi
		cd -
	done < "$HOME/work/gitlab.redhat.com/repos_rhel9"
}
ocp4_cluster_shutdown() {
	for node in $(oc get nodes -o jsonpath='{.items[*].metadata.name}'); do oc debug node/${node} -- chroot /host shutdown -h 1; done
}

ocp4_start_machines() {
	MACHINE="rn6fr"
	WORKER_1="gght6"
	WORKER_2="5vgxj"
	WORKER_3="r6grm"
	#openstack --os-token=$OS_PASSWORD server list
	for machine in core-serv-ocp-$MACHINE-master-0 core-serv-ocp-$MACHINE-master-1 core-serv-ocp-$MACHINE-master-2 core-serv-ocp-$MACHINE-worker-0-$WORKER_1 core-serv-ocp-$MACHINE-worker-0-$WORKER_2 core-serv-ocp-$MACHINE-worker-0-$WORKER_3 ; do
		echo "Start instance: $machine"
		openstack --os-token=$OS_PASSWORD server start $machine
	done
}

ocp4_check_cluster() {
	echo "Check 'oc get nodes -l master'"
	oc get nodes -l node-role.kubernetes.io/master
	echo "oc get csr"
	oc get csr
	echo "Check 'oc get nodes -l mworker'"
	oc get nodes -l node-role.kubernetes.io/worker
	echo "Check oc get clusteroperators"
	oc get clusteroperators
	oc get -o yaml clusteroperator image-registry
}

podman_restart() {
	rm -rf ~/.ssh/podman-machine-default*
	rm -rf ~/.config/containers
	rm -rf ~/.local/share/containers
	brew uninstall podman
	brew install podman
	podman machine init
	podman machine start
}

oc_approve_csr() {
	oc get csr | grep -i pending
	for i in `oc get csr --no-headers | grep -i pending |  awk '{ print $1 }'`; do
		oc adm certificate approve $i
	done
}

oc_login_shared_cluster() {
	TOKEN=$(cat $HOME/OneDrive/MACOS/sclorg-token)
	oc login --token=$TOKEN --server=https://api.gpc.ocp-hub.prod.psi.redhat.com:6443
}

ipstack() {
	export IP_STACK="$1"
}
helm_verifier() {
set -x
	package=$1
	podman run --rm -i -e KUBECONFIG=/.kube/config -v /Users/phracek/ocp4_data:/.kube \
		  -v $(pwd):/charts \
		  "quay.io/redhat-certification/chart-verifier:latest" \
		  verify /charts/$package --kube-insecure-skip-tls-verify=true
set +x
}
# SCLORG aliases
alias postgresql_rsync="rsync_tmt postgresql-container"
alias mariadb_rsync="rsync_tmt mariadb-container"
alias mysql_rsync="rsync_tmt mysql-container"
alias httpd_rsync="rsync_tmt httpd-container"
alias nginx_rsync="rsync_tmt nginx-container"
alias nodejs_rsync="rsync_tmt s2i-nodejs-container"
alias python_rsync="rsync_tmt s2i-python-container"
alias ruby_rsync="rsync_tmt s2i-ruby-container"
alias rails_ex_rsync="rsync_tmt rails-ex"
alias httpd_ex_rsync="rsync_tmt httpd-ex"
alias nginx_ex_rsync="rsync_tmt nginx-ex"
alias nodejs_ex_rsync="rsync_tmt nodejs-ex"
alias cakephp_ex_rsync="rsync_tmt cakephp-ex"
alias dancer_ex_rsync="rsync_tmt dancer-ex"
alias django_ex_rsync="rsync_tmt django-ex"
alias php_rsync="rsync_tmt s2i-php-container"
alias varnish_rsync="rsync_tmt varnish-container"
alias redis_rsync="rsync_tmt redis-container"
alias perl_rsync="rsync_tmt s2i-perl-container"
alias container_common_scripts_rsync="rsync_tmt container-common-scripts"
alias betka_upstream_rsync="rsync_to_openstack_dir /Users/phracek/work/scl-utils/betka"
alias helm_charts_rsync="rsync_tmt ../scl-utils/helm-charts"
alias ansible_tests_rsync="rsync_tmt ../scl-utils/ansible-tests"
alias rhcwt_rsync="rsync_to_openstack_dir /Users/phracek/work/Gitlab/rhcwt"
alias cwt_rsync="rsync_to_openstack_dir /Users/phracek/work/scl-utils/container-workflow-tool"
alias container-ci-suite_rsync="rsync_tmt ../scl-utils/container-ci-suite"


# User specific aliases and functions
alias python="python3.8"
alias pip="pip3.8"
alias did="docker rmi -f"
alias pid="podman rmi -f $(podman images -q)"
alias ppsid="podman rm -f $(podman ps -aq)"
alias sen="sen --yolo"
alias work="cd $HOME/work/"
alias gpull="git pull --rebase"
alias gpush="git push"
alias gpo="git push -f origin"
alias grc="git rebase --continue"
alias gl="git log"
alias gp='git fetch --prune --tags origin; git rebase origin/master'
alias gb="git branch"
alias fedora="cd $HOME/work/Fedora"
alias rhel="cd $HOME/work/RHEL"
alias ga="git add -p"
alias gco="git checkout"
alias gcob="git checkout -b "
alias gcom="git checkout master"
alias pi="docker images"
alias greset="git reset HEAD"
alias sclc="cd $HOME/work/scl-containers"
alias sclu="cd $HOME/work/scl-utils"
alias sclb="cd $HOME/work/scl-buildpacks"
alias gitl="cd $HOME/work/GitLab"
alias apple="cd $HOME/work/Apple"
alias gammend="git ci --amend"
alias specbump="rpmdev-bumpspec *.spec"
alias work="cd ~/work"
alias trigger_commit='git commit --allow-empty -m "trigger commit"'
alias p38="pyenv global 3.8.12"
alias kfedora="kinit phracek@FEDORAPROJECT.ORG"
alias u="cat $HOME/dot-files/usage"
alias up="cat $HOME/dot-files/usage_python"
alias ug="cat $HOME/.oh-my-zsh/plugins/git/git.plugin.zsh"
alias c="cat $HOME/dot-files/zshrc.mac"
alias s="source $HOME/.zshrc"
alias vzm="vim $HOME/dot-files/zshrc.mac"
alias v="vagrant"
alias vu="vagrant up"
alias vup="vagrant up --provision"
alias vrs="vagrant rsync-auto"
alias vssh="vagrant ssh"
alias pms="podman machine init --cpus=2 --disk-size=30 --memory=8192"
alias helm="/Users/phracek/helm-cmd/helm"
alias ssh_gitlab_runner="ssh -i ~/.ssh/openstack fedora@10.0.151.217"
alias ssh_nightly_builds="ssh -i ~/.ssh/openstack fedora@10.0.98.35"
alias ssh_phracek_fedora="ssh -i ~/.ssh/openstack phracek@$FEDORA_IP_STACK"
alias ssh_role_rhu="ssh -i ~/.ssh/rht_classroom.rsa -J cloud-user@148.62.94.248:22022 student@172.25.252.1 -p 53009"
alias ssh_phracek_rhel8="ssh root@$RHEL8_IP_STACK"
alias ssh_mac_fedora="ssh -i ~/.ssh/utm_rsa root@192.168.64.2"
alias ssh_tmt="ssh -i ~/.ssh/tf_key "
alias go-md2man="~/work/programming/go-md2man/go-md2man"
alias readlink="greadlink"
alias template2helm="$HOME/template2helm/template2helm"
alias connect_tmt="$HOME/work/GitLab/core-services-dockerfiles/connect_tmt.sh"
alias spy3.8="source $HOME/venv3.8/bin/activate"
alias openstack="openstack --os-token=$OS_PASSWORD"
export PATH="$HOME/oc-client-4.11.7:/usr/local/opt/sqlite/bin:/usr/local/opt/coreutils/libexec:$PATH"
export KUBECONFIG=$HOME/ocp4_data/config
export PATH="/usr/local/go/bin:$PATH"

