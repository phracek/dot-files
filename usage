Vagrant.configure("2") do |config|
    if Vagrant.has_plugin?("vagrant-vbguest")
        config.vbguest.auto_update = false
    end

    config.vm.box = "fedora/30-cloud-base"
    config.vm.synced_folder ".", "/vagrant"

    config.vm.provider "virtualbox" do |virtualbox|
        virtualbox.memory = 1024
    end

    config.vm.provision :ansible_local do |ansible|
	    ansible.verbose = "v"
	    ansible.playbook = "./install-requirements.yaml"
	    ansible.become = true
    end

    config.vm.provision "shell", inline: <<-SHELL
        cd /vagrant
        pip3 install .
    SHELL
end
------------------

FROM fedora:29

ENV LANG=en_US.UTF-8
# nicer output from the playbook run
ENV ANSIBLE_STDOUT_CALLBACK=debug

# Install packages first and reuse the cache as much as possible
RUN dnf install -y vim
    && dnf clean all

docker build --tag $(NAME) .

--------------------

---
- name: Install dependencies for packit-service.
  hosts: all
  vars:
    project_dir: "{{ playbook_dir}}/.."
  tasks:
  - name: Install all RPM packages needed to run packit-service.
    dnf:
      name:
      - fedpkg
      - git-core
      - mod_md
      - nss_wrapper
      - origin-clients
      - python3-GitPython
      - python3-gnupg
      - python3-click
  - name: Install deps from PyPi
    pip:
      name: '{{ item }}'
    with_items:
    - PyGithub
    - python-gitlab
    become: true


--------------------
Deploy packit service

* oc cluster up
* DEPLOYMENT=dev make deploy
* oc rollout latest dc/packit-service

---
ansible how to install from pr and from specific GitHub commit:

- name: Install project from GitHub and from specific PR
  pip:
    # PR is named update-ogr-related-code
    name: git+https://github.com/packit-service/packit.git@update-ogr-related-code
    executable: pip3
- name: Install project from GitHub from specific commit
  pip:
    name: git+https://github.com/packit-service/packit.git#COMMIT_SHA
    executable: pip3
